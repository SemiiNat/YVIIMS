version: "3.8"

services:
  web-server:
    build:
      dockerfile: php.Dockerfile
      context: ./
    container_name: ivs-webserver
    volumes:
      - "./html/:/var/www/html/"
      - "./php.ini:/usr/local/etc/php/php.ini"
      - "./.htaccess:/var/www/html/.htaccess"
      - ./logs:/var/log/php
    restart: unless-stopped
    ports:
      - "${APACHE_PORT:-8080}:80"
    environment:
      - SERVICE_NAME=webserver
      - SERVICE_TAGS=dev
    networks:
      - ivs-networks

  mysql-server:
    image: mysql:8.0
    container_name: ivs-mysql
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=sOQSO6DxD
      - MYSQL_DATABASE=ivs
      - SERVICE_NAME=mysql
      - SERVICE_TAGS=dev
    networks:
      - ivs-networks

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ivs-phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql-server
      - PMA_USER=root
      - PMA_PASSWORD=sOQSO6DxD
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    volumes:
      - ./docker/phpmyadmin/sessions:/sessions
    networks:
      - ivs-networks

  node:
    image: node:14-alpine
    container_name: ivs-node
    working_dir: /app
    volumes:
      - "./html:/app"
    command: sh -c "npm install && npm run watch-css"
    networks:
      - ivs-networks

networks:
  ivs-networks:
    driver: bridge

volumes:
  mysql-data:
